# Inputs:
# release_version: The verison to deploy. Takes semantic version example 1.0.1, If given release version not available, new release will be created and deployed.
# release_description: The info to use for creating new release in GitHub. This is used incase of creating new release.
# release_tag : The docker tag for deployment

name: Deploy Docker

on:
  workflow_dispatch:
    inputs:
      release_tag:
        type: string
        required: true
        description: Release tag
        default: vkumar2/docker-app
      release_version:
        type: string
        required: true
        description: Release version
        default: 1.0.1     
      release_description:
        type: string
        required: false
        description: Release description
        default: The automated docker deployment

jobs:
  docker-workflow:
    permissions: write-all
    runs-on: ubuntu-latest
    name: Deploy Docker
    continue-on-error: false
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name : Get Release
        uses: cardinalby/git-get-release-action@v1
        id: get-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ inputs.release_version }}
          doNotFailIfNotFound : true

      - name: Create Release
        if: steps.get-release.outputs.tag_name == ''
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ inputs.release_version }}
          release_name: Release  ${{ inputs.release_version }}
          body: |
            Release created by GitHub Action.
            ${{ inputs.release_description }}
          draft: false
          prerelease: false

      - name: Set up Docker Buildx
        if: steps.get-release.outputs.tag_name == ''
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        if: steps.get-release.outputs.tag_name == ''
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and push
        if: steps.get-release.outputs.tag_name == ''
        uses: docker/build-push-action@v4
        with:
          push: true
          file: ./Dockerfile
          tags: ${{ inputs.release_tag }}:latest,${{ inputs.release_tag }}:${{ inputs.release_version }}

      