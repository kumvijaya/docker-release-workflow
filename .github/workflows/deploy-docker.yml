# Create flow chart
# Release version can be empty.
# If empty, 
# Give Betelabs
# send contributor role
# get flow chart

name: Deploy Docker

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: false
        description: Version
        default: 1.0.1
      create_release:
        type: boolean
        required: false
        description: Create github release
      release_description:
        type: string
        required: false
        description: Github release description
        default: Release related info       
      docker_tag:
        type: string
        required: true
        description: Docker tag
        default: vkumar2/docker-app

jobs:
  docker-workflow:
    permissions: write-all
    runs-on: ubuntu-latest
    name: Deploy Docker
    continue-on-error: false
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name : Get Release
        uses: cardinalby/git-get-release-action@v1
        id: get-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ inputs.version }}
          doNotFailIfNotFound : true

      # - id: bump
      #   uses: zwaldowski/match-label-action@v4
      #   with:
      #     allowed: major,minor,patch

      - id: next_version
        uses: zwaldowski/semver-release-action@v3
        with:
          dry_run: true
          bump: patch
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "Next version = ${{ steps.next_version.outputs.version }}"
          echo "inputs.create_release= ${{ inputs.create_release }}"
          echo "inputs.version= ${{ inputs.version }}"
          echo "steps.get-release.outputs.tag_name= ${{ steps.get-release.outputs.tag_name }}"

      - name: Create Release 
        if: ${{ inputs.create_release == 'true' && ( inputs.version == '' || steps.get-release.outputs.tag_name == '') }}
        id: create_release
        uses: actions/create-release@v1 # find alternate action as it is deprecated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ steps.next_version.outputs.version }}
          release_name: Release  ${{ steps.next_version.outputs.version }}
          body: |
            Release created by GitHub Action.
            ${{ inputs.release_description }}
          draft: false
          prerelease: false

      # - name: Set up Docker Buildx
      #   if: steps.get-release.outputs.tag_name == ''
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to Docker Registry
      #   if: steps.get-release.outputs.tag_name == ''
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Docker Build and push
      #   if: steps.get-release.outputs.tag_name == ''
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     file: ./Dockerfile
      #     tags: ${{ inputs.release_tag }}:latest,${{ inputs.release_tag }}:${{ inputs.release_version }}

      # - name : Deploy
      #   run: |
      #     echo "TODO: Use release tag/version : ${{ inputs.release_tag }}/${{ inputs.release_version }}"

      