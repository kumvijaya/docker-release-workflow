name: Deploy Docker

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: false
        description: Version
      create_release:
        type: boolean
        required: false
        description: Create github release
      build_images:
        type: string
        required: true
        description: Build images
jobs:
  docker-workflow:
    permissions: write-all
    runs-on: ubuntu-latest
    name: Deploy Docker
    continue-on-error: false
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: main

      - name: Extract owner
        shell: bash
        run: echo "##[set-output name=owner;]$(echo ${GITHUB_REPOSITORY%/*})"
        id: extract_owner

      - name: Checkout config repo
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.extract_owner.outputs.owner }}/docker-workflow-config
          ref: main
          token: ${{ secrets.GH_PAT }}
          path: docker-workflow-config

      - name: Get release version to check
        env:
          INPUT_VERSION: ${{ inputs.version }}
        run: |
          version_to_check="EMPTY"
          if [ "$INPUT_VERSION" != '' ]; then
              version_to_check="$INPUT_VERSION"
          fi
          echo "VERSION_TO_CHECK=$version_to_check" >> $GITHUB_ENV

      - name : Get Release
        uses: cardinalby/git-get-release-action@v1
        id: get-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ env.VERSION_TO_CHECK }}
          doNotFailIfNotFound : true

      - id: next_version
        if: ${{ inputs.create_release && steps.get-release.outputs.tag_name == '' }}
        uses: zwaldowski/semver-release-action@v3
        with:
          dry_run: true
          bump: patch
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release 
        if: ${{ inputs.create_release && steps.get-release.outputs.tag_name == '' }}
        uses: actions/create-release@v1 # find alternate action as it is deprecated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ steps.next_version.outputs.version }}
          release_name: Release  ${{ steps.next_version.outputs.version }}
          body: |
            Release created by GitHub Action
          draft: false
          prerelease: false

      - name: Populate tags
        env:
          INPUT_VERSION: ${{ inputs.version }}
          CREATE_RELEASE: ${{ inputs.create_release }}
          SEM_VERSION: ${{ steps.next_version.outputs.version }}
          FETCHED_RELEASE: ${{ steps.get-release.outputs.tag_name }}
        run: |
          tags=''
          deploy_version=''
          if [ "$CREATE_RELEASE" == 'true' ]; then
              if [ "$FETCHED_RELEASE" == '' ]; then
                  tags="$SEM_VERSION"
                  tags="${tags},$GITHUB_SHA"
                  tags="${tags},latest"
                  if [ "$INPUT_VERSION" != '' ]; then
                      tags="${tags},$INPUT_VERSION"
                  fi
                  deploy_version=$SEM_VERSION
              else
                  deploy_version=$INPUT_VERSION
              fi
          else
              if [ "$FETCHED_RELEASE" != '' ]; then
                  if [ "$INPUT_VERSION" != '' ]; then
                      deploy_version=$INPUT_VERSION
                  else
                      deploy_version=latest
                  fi                  
              else
                  if [ "$INPUT_VERSION" != '' ]; then
                      tags="$INPUT_VERSION"
                      tags="${tags},$GITHUB_SHA"
                      deploy_version=$INPUT_VERSION
                  else
                      deploy_version=latest
                  fi
              fi
          fi
          echo "DOCKER_TAGS=$tags" >> $GITHUB_ENV
          echo "DEPLOY_VERSION=$deploy_version" >> $GITHUB_ENV

      - uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12

      - name: Build and Push docker image
        if: env.DOCKER_TAGS != ''
        run: |
          docker-workflow-config/build.sh ${{ inputs.build_images }} ${{ secrets.DOCKERHUB_USERNAME}} ${{ secrets.DOCKERHUB_TOKEN }} '${{ env.DOCKER_TAGS }}' ${{ secrets.DOCKER_REGISTRTY }}

      - run: |
          echo "Deployment version : ${{ env.DEPLOY_VERSION }}"

      